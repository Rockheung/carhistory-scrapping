# VSCODE의 아래 플러그인을 통해 본 문서를 바로 API테스트용으로 사용할 수 있습니다.
# https://marketplace.visualstudio.com/items?itemName=humao.rest-client
# 보험료 비교견적을 얻기 위한 단계는 다음과 같습니다
# 1. 세션키 획득
# 2. 대상 차량 정보를 세션에 설정
# 3. 휴대폰을 통한 인증
# 4. 보험 옵션을 설정하여 견적 요청
# 5. 보험 견적 리스트 획득

# 1번은 최우선적으로 이루어져야 하며, 이후 바로 아래의 @KEY 변수를 업데이트합니다.
# 2번과 3번의 순서는 어느 부분이 먼저여도 상관 없습니다.
# 4번의 옵션 종류는 세션키가 유효한 동안 GET /options?key=@KEY 요청을 통해 획득할 수 있습니다.
# 요청별 자세한 응답은 예시에 주석으로 나타나 있습니다.


@URL = http://localhost:8080
@KEY = 5lRBr6ccMt43l3q2MagajKpCaggqGZPlOVwDMDEYyjFweWqaywcGh1BMWCERuMCA
@CAR_NUM = 48도9842


### 
# 모든 것을 시작하기에 앞서, 세션키 획득. 최상단 KEY를 이 응답으로 업데이트

GET {{URL}}/session HTTP/1.1

# HTTP/1.1 200 OK
# Content-Type: application/json; charset=utf-8
# Content-Length: 75
# Date: Fri, 04 Oct 2019 05:46:16 GMT
# Server: Python/3.7 aiohttp/3.6.1
# Connection: close

# {
#   "key": "TVo1p968Zgwc5OJVUaORm6sKW0iY8OV7ODU9AykH4ih2qk6HyNAa5vaYen8PzlxX"
# }


### 자동차 정보를 차 번호에 기반하여 검색

GET {{URL}}/car HTTP/1.1
?key={{KEY}}
&num={{CAR_NUM}}

# HTTP/1.1 200 OK
# Content-Type: application/json; charset=utf-8
# Content-Length: 314
# Date: Fri, 04 Oct 2019 05:46:34 GMT
# Server: Python/3.7 aiohttp/3.6.1
# Connection: close

# {
#   "car_maker": "현대",
#   "car_opt": "N20 디럭스 고급형,오토,ABS,AIR-D,IM(가솔린)",
#   "prod_year": "2005",
#   "car_maker_year": "201904",
#   "ins_car_name_code_type": "1",
#   "prod_year_name": "2005",
#   "ins_car_name_code": "61Y95",
#   "car_quota": "5",
#   "car_name_dtl": "NF쏘나타 2.0(신형)",
#   "car_name": "쏘나타"
# }


### 차량 옵션별로 검색 진행: 차 제조사 검색

GET {{URL}}/car/maker HTTP/1.1
?key={{KEY}}


# HTTP/1.1 200 OK
# Content-Type: application/json; charset=utf-8
# Content-Length: 243
# Date: Fri, 04 Oct 2019 05:46:49 GMT
# Server: Python/3.7 aiohttp/3.6.1
# Connection: close

# [
#   {
#     "car_maker": "AD"
#   },
#   {
#     "car_maker": "CT&T"
#   },
#   {
#     "car_maker": "기아"
#   },
#   {
#     "car_maker": "대우"
#   },
#   {
#     "car_maker": "대창"
#   },
#   {
#     "car_maker": "삼성"
#   },
#   {
#     "car_maker": "쌍용"
#   },
#   {
#     "car_maker": "외산"
#   },
#   {
#     "car_maker": "현EV"
#   },
#   {
#     "car_maker": "현대"
#   }
# ]


### 차량 옵션별로 검색 진행: 차 이름 검색

GET {{URL}}/car/name HTTP/1.1
?key={{KEY}}
&car_maker=기아


# HTTP/1.1 200 OK
# Content-Type: application/json; charset=utf-8
# Content-Length: 643
# Date: Fri, 04 Oct 2019 05:47:15 GMT
# Server: Python/3.7 aiohttp/3.6.1
# Connection: close

# [
#   {
#     "car_name": "K3"
#   },
#   {
#     "car_name": "K5"
#   },
#   {
#     "car_name": "K7"
#   },
#   {
#     "car_name": "K9"
#   },
#   {
#     "car_name": "NIRO"
#   },
#   {
#     "car_name": "RAY"
#   },
#   {
#     "car_name": "로체"
#   },
#   {
#     "car_name": "리갈"
#   },
#   {
#     "car_name": "리오"
#   },
#   {
#     "car_name": "모닝"
#   },
#   {
#     "car_name": "모하비"
#   },
#   {
#     "car_name": "스토닉"
#   },
#   {
#     "car_name": "스팅어"
#   },
#   {
#     "car_name": "스포티지"
#   },
#   {
#     "car_name": "쎄라토"
#   },
#   {
#     "car_name": "쏘렌토"
#   },
#   {
#     "car_name": "쏘울"
#   },
#   {
#     "car_name": "엑스트렉(X-TREK)"
#   },
#   {
#     "car_name": "오피러스"
#   },
#   {
#     "car_name": "옵티마"
#   },
#   {
#     "car_name": "카니발"
#   },
#   {
#     "car_name": "카니발II"
#   },
#   {
#     "car_name": "카렌스"
#   },
#   {
#     "car_name": "포르테"
#   },
#   {
#     "car_name": "프라이드"
#   }
# ]



### 차량 옵션별로 검색 진행: 차 연식 검색
# 연도 마지막에 A는 이후 등록차량, B는 이전 등록차량을 뜻합니다.

GET {{URL}}/car/year HTTP/1.1
?key={{KEY}}
&car_maker=외산
&car_name=Audi

# HTTP/1.1 200 OK
# Content-Type: application/json; charset=utf-8
# Content-Length: 798
# Date: Fri, 04 Oct 2019 05:47:33 GMT
# Server: Python/3.7 aiohttp/3.6.1
# Connection: close

# [
#   {
#     "prod_year": "2019",
#     "prod_year_name": "2019"
#   },
#   {
#     "prod_year": "2018B",
#     "prod_year_name": "2019.04.03"
#   },
#   {
#     "prod_year": "2018A",
#     "prod_year_name": "2019.04.04"
#   },
#   {
#     "prod_year": "2017",
#     "prod_year_name": "2017"
#   },
#   {
#     "prod_year": "2016",
#     "prod_year_name": "2016"
#   },
#   {
#     "prod_year": "2015",
#     "prod_year_name": "2015"
#   },
#   {
#     "prod_year": "2014",
#     "prod_year_name": "2014"
#   },
#   {
#     "prod_year": "2013",
#     "prod_year_name": "2013"
#   },
#   {
#     "prod_year": "2012",
#     "prod_year_name": "2012"
#   },
#   {
#     "prod_year": "2011",
#     "prod_year_name": "2011"
#   },
#   {
#     "prod_year": "2010",
#     "prod_year_name": "2010"
#   },
#   {
#     "prod_year": "2009",
#     "prod_year_name": "2009"
#   },
#   {
#     "prod_year": "2008",
#     "prod_year_name": "2008"
#   },
#   {
#     "prod_year": "2007",
#     "prod_year_name": "2007"
#   },
#   {
#     "prod_year": "2006",
#     "prod_year_name": "2006"
#   },
#   {
#     "prod_year": "2005",
#     "prod_year_name": "2005"
#   }
# ]


### 차량 옵션별로 검색 진행: 차 상세 검색

GET {{URL}}/car/detail HTTP/1.1
?key={{KEY}}
&car_maker=외산
&car_name=Audi
&prod_year=2018B

# HTTP/1.1 200 OK
# Content-Type: application/json; charset=utf-8
# Content-Length: 240
# Date: Fri, 04 Oct 2019 05:47:50 GMT
# Server: Python/3.7 aiohttp/3.6.1
# Connection: close

# [
#   {
#     "car_name_dtl": "A3"
#   },
#   {
#     "car_name_dtl": "A4"
#   },
#   {
#     "car_name_dtl": "A5"
#   },
#   {
#     "car_name_dtl": "A6"
#   },
#   {
#     "car_name_dtl": "A7"
#   },
#   {
#     "car_name_dtl": "A8"
#   },
#   {
#     "car_name_dtl": "Q5"
#   },
#   {
#     "car_name_dtl": "Q7"
#   },
#   {
#     "car_name_dtl": "R8"
#   },
#   {
#     "car_name_dtl": "TT"
#   }
# ]


### 차량 옵션별로 검색 진행: 차 옵션 검색

GET {{URL}}/car/options HTTP/1.1
?key={{KEY}}
&car_maker=외산
&car_name=Audi
&prod_year=2018B
&car_name_dtl=A6

# HTTP/1.1 200 OK
# Content-Type: application/json; charset=utf-8
# Content-Length: 6777
# Date: Fri, 04 Oct 2019 05:48:04 GMT
# Server: Python/3.7 aiohttp/3.6.1
# Connection: close

# [
#   {
#     "car_maker": "외산",
#     "car_opt": "5인승 A6 35 TDI Comfort(오토,ABS,AIR-D,IM)(디젤)",
#     "prod_year": "2018B",
#     "car_maker_year": "201904",
#     "ins_car_name_code_type": "1",
#     "prod_year_name": "2019.04.03",
#     "ins_car_name_code": "930Z3",
#     "car_quota": "5",
#     "car_name_dtl": "A6",
#     "car_name": "Audi"
#   },
#   ...
#   {
#     "car_maker": "외산",
#     "car_opt": "5인승 A6 S6 TFSI 4.0 TFSI Quattro Sport Design(오토,ABS,AIR-D,IM)(가솔린)",
#     "prod_year": "2018B",
#     "car_maker_year": "201904",
#     "ins_car_name_code_type": "1",
#     "prod_year_name": "2019.04.03",
#     "ins_car_name_code": "930Y3",
#     "car_quota": "5",
#     "car_name_dtl": "A6",
#     "car_name": "Audi"
#   },
#   {
#     "car_maker": "외산",
#     "car_opt": "5인승 A6 S6 TFSI 4.0 TFSI Quattro Sport(오토,ABS,AIR-D,IM)(가솔린)",
#     "prod_year": "2018B",
#     "car_maker_year": "201904",
#     "ins_car_name_code_type": "1",
#     "prod_year_name": "2019.04.03",
#     "ins_car_name_code": "930L2",
#     "car_quota": "5",
#     "car_name_dtl": "A6",
#     "car_name": "Audi"
#   }
# ]



### 자동차 정보를 해당 세션에 설정합니다.
# 차량번호가 아닌 차량의 제조사 등으로 검색하신 경우 car_num의 값은 비워놓으시면 됩니다.

POST {{URL}}/car?key={{KEY}} HTTP/1.1
Content-Type: application/json

{
  "car_num": "{{CAR_NUM}}",
  "car_maker": "현대",
  "car_opt": "N20 디럭스 고급형,오토,ABS,AIR-D,IM(가솔린)",
  "prod_year": "2005",
  "car_maker_year": "201904", 
  "ins_car_name_code_type": "1",
  "prod_year_name": "2005",
  "ins_car_name_code": "61Y95",
  "car_quota": "5",
  "car_name_dtl": "NF쏘나타 2.0(신형)",
  "car_name": "쏘나타"
}

# HTTP/1.1 201 Created
# Content-Length: 0
# Content-Type: application/octet-stream
# Date: Fri, 04 Oct 2019 05:48:50 GMT
# Server: Python/3.7 aiohttp/3.6.1
# Connection: close


### 
# 중복값이 있지만 개선 예정입니다.
# hpcorp: SKT KTF LGT SKM KTM LGM
# fgnGbn: 1: 내국인, 2: 외국인
# gender: M F

POST {{URL}}/auth?key={{KEY}} HTTP/1.1
Content-Type: application/json

{
  "birth": "19901125",
  "hpno": "01071349409",
  "gender": "M",
  "name": "박흥준",
  "fgnGbn": "1",
  "ssn1": "901125",
  "ssn2": "1034746",
  "hpcorp": "LGM",
  "number": "010",
  "number2": "7134",
  "number3": "9409"
}

# HTTP/1.1 200 OK
# Content-Type: application/json; charset=utf-8
# Content-Length: 377
# Date: Fri, 04 Oct 2019 05:49:06 GMT
# Server: Python/3.7 aiohttp/3.6.1
# Connection: close

# {
#   "reqInfo": "A1A1FF494D4328DFCD66FF8748208FD79CFE1A8B5A4530B9DF8333F8562FF26B069F6F9DCF7F0F383E328AFEF50AA55CDEEC43D1CF7093FDBF81D468F5BD2658626D99DC148C06CB861BDB59BD3BC162DA2E50496A3CD6E6AC5B8B73ECC88116927A905AF1F0D6E389C27B0FDD4D6DA7C4D39C7ABA2BB2BEDC002F72DB75D0CBC6BD51C2AC4D4C6DB8B18A68CF93A389",
#   "reqNum": "201910041448593333333333                ",
#   "confirmSeq": "01"
# }


### 
# 요청간의 검증을 위해 또다른 해시스트링을 사용하고 있는데, 개선 예정입니다.
# 위 요청의 응답에서 reqInfo, confirmSeq, reqNum를 획득해 인증 문자와 함께 제출합니다.
# reqNum는 공백도 함께 제출해야 합니다.
# 사용자의 폰으로 전송된 문자를 smsnum의 값으로 입력합니다.

PUT {{URL}}/auth?key={{KEY}} HTTP/1.1
Content-Type: application/json

{
  "username": "박흥준",
  "sBirthdate": "19901125",
  "sGender": "1",
  "ssn1": "901125",
  "ssn2": "1034746",
  "reqInfo": "A1A1FF494D4328DFCD66FF8748208FD79CFE1A8B5A4530B9DF8333F8562FF26B069F6F9DCF7F0F383E328AFEF50AA55CDEEC43D1CF7093FDBF81D468F5BD2658626D99DC148C06CB861BDB59BD3BC162DA2E50496A3CD6E6AC5B8B73ECC88116927A905AF1F0D6E389C27B0FDD4D6DA7C4D39C7ABA2BB2BEDC002F72DB75D0CBC6BD51C2AC4D4C6DB8B18A68CF93A389",
  "confirmSeq": "01",
  "reqNum": "201910041448593333333333                ",
  "smsnum": "873517"
}

# HTTP/1.1 201 Created
# Content-Length: 0
# Content-Type: application/octet-stream
# Date: Fri, 04 Oct 2019 05:49:39 GMT
# Server: Python/3.7 aiohttp/3.6.1
# Connection: close


###
# 보험 옵션들에 대한 리스트입니다. 배열의 경우 첫 번째 값이 기본 값인데, 2차원 배열의 경우 예외가 있습니다.
# psn2Yn : 대인배상2
# tng1Amt : 대물배상
# driverInjGubun : 1 - 자기신체손해, 2 - 자동차상해, 3 - 미가입
#  - driverDthAmt, driverInjAmt 두 옵션은 driverInjGubun의 값의 순서에 따라 
#  - 가질 수 있는 값이 달라집니다. 예를 들어 driverInjGubun = 2 인 경우,
#  - driverDthAmt는 두 번째 배열 [10000,10000,20000,20000] 이 선택지, 
#  - driverDthAmt는 두 번째 배열 [2000,3000,2000,3000] 이 선택지가 됩니다.
# noInsYn : 무보험상해
# mycarYn: 자기차량손해
# emgServiceYn : 긴급출동 서비스
# tngBaseAmt : 물적사고 할증금액
# driverScope : 운전자 범위 
# 피보험자1인(3), 피보험자1인+지정1인(7), 누구나(0), 부부한정(2), 가족한정(1), 가족+형제자매(4)
#  - minBrith : 최소운전자 생년월일
# special1Yn : 마일리지 할인
# special2Yn : 블랙박스 할인
# special3Yn : 자녀 할인
#  - cChildGb : c - 자녀, t - 태아
#  - special3Opt : 자녀인 경우 최저연령 기준 생년월일
# special4Yn : 사고통보장치 할인
# special5Yn : 대중교통 할인 - 운전자 범위가 피보험자1인 또는 부부한정인 경우만 해당
# special6Yn : 안전운전습관 할인 - 운전자 범위가 피보험자1인 또는 부부한정인 경우만 해당
#  - special6Opt : 티맵을 이용한 운전점수 입력. 61점 이상인 경우 할인
# special7Yn : 과거주행거리연동 할인
# 과거 연평균 주행거리 12000 이하인 경우 가입
# special8Yn : E-MAIL 할인
# special9Yn : 서민우대 할인


GET {{URL}}/options?key={{KEY}} HTTP/1.1

# HTTP/1.1 200 OK
# Content-Type: application/json; charset=utf-8
# Content-Length: 2807
# Date: Fri, 04 Oct 2019 05:49:52 GMT
# Server: Python/3.7 aiohttp/3.6.1
# Connection: close

# {
#   "psn2Yn": [
#     "1",
#     "0"
#   ],
#   "tng1Amt": [
#     "20000",
#     "2000",
#     "3000",
#     "5000",
#     "10000",
#     "30000",
#     "50000"
#   ],
#   "driverInjGubun": [
#     "1",
#     "2",
#     "3"
#   ],
#   "driverDthAmt": [
#     [
#       "1500",
#       "3000",
#       "5000",
#       "10000"
#     ],
#     [
#       "10000",
#       "10000",
#       "20000",
#       "20000"
#     ],
#     [
#       ""
#     ]
#   ],
#   "driverInjAmt": [
#     [
#       "1500",
#       "1500",
#       "1500",
#       "1500"
#     ],
#     [
#       "2000",
#       "3000",
#       "2000",
#       "3000"
#     ],
#     [
#       ""
#     ]
#   ],
#   "noInsYn": [
#     "1",
#     "0"
#   ],
#   "mycarYn": [
#     "1",
#     "0"
#   ],
#   "emgServiceYn": [
#     "1",
#     "0"
#   ],
#   "tngBaseAmt": [
#     "200",
#     "050",
#     "100",
#     "150"
#   ],
#   "driverScope": [
#     "3",
#     "7",
#     "0",
#     "2",
#     "1",
#     "4"
#   ],
#   "minBrith": "19720705",
#   "minBrithY": [
#     "",
#     "2000",
#     "1999",
#     "1998",
#     "1997",
#     "1996",
#     "1995",
#     "1994",
#     "1993",
#     "1992",
#     "1991",
#     "1990",
#     "1989",
#     "1988",
#     "1987",
#     "1986",
#     "1985",
#     "1984",
#     "1983",
#     "1982",
#     "1981",
#     "1980",
#     "1979",
#     "1978",
#     "1977",
#     "1976",
#     "1975",
#     "1974",
#     "1973",
#     "1972",
#     "1971",
#     "1970",
#     "1969",
#     "1968",
#     "1967",
#     "1966",
#     "1965",
#     "1964",
#     "1963",
#     "1962",
#     "1961",
#     "1960",
#     "1959",
#     "1958",
#     "1957",
#     "1956",
#     "1955",
#     "1954",
#     "1953",
#     "1952",
#     "1951",
#     "1950",
#     "1949",
#     "1948",
#     "1947",
#     "1946",
#     "1945",
#     "1944",
#     "1943",
#     "1942",
#     "1941",
#     "1940"
#   ],
#   "minBrithM": [
#     "",
#     "01",
#     "02",
#     "03",
#     "04",
#     "05",
#     "06",
#     "07",
#     "08",
#     "09",
#     "10",
#     "11",
#     "12"
#   ],
#   "minBrithD": [
#     "",
#     "01",
#     "02",
#     "03",
#     "04",
#     "05",
#     "06",
#     "07",
#     "08",
#     "09",
#     "10",
#     "11",
#     "12",
#     "13",
#     "14",
#     "15",
#     "16",
#     "17",
#     "18",
#     "19",
#     "20",
#     "21",
#     "22",
#     "23",
#     "24",
#     "25",
#     "26",
#     "27",
#     "28",
#     "29",
#     "30",
#     "31"
#   ],
#   "special1Yn": [
#     "0",
#     "1"
#   ],
#   "special1Opt": [
#     "00000",
#     "02000",
#     "03000",
#     "04000",
#     "05000",
#     "06000",
#     "07000",
#     "08000",
#     "09000",
#     "10000",
#     "11000",
#     "12000",
#     "13000",
#     "14000",
#     "15000",
#     "16000",
#     "17000",
#     "18000",
#     "19000",
#     "20000"
#   ],
#   "special2Yn": [
#     "0",
#     "1"
#   ],
#   "special2Opt1": "000000",
#   "special2Opt3": "000",
#   "special2YYYY": [
#     "",
#     "2019",
#     "2018",
#     "2017",
#     "2016",
#     "2015",
#     "2014",
#     "2013",
#     "2012",
#     "2011",
#     "2010",
#     "2009",
#     "2008",
#     "2007",
#     "2006",
#     "2005",
#     "2004",
#     "2003",
#     "2002",
#     "2001",
#     "2000",
#     "1999",
#     "1998",
#     "1996",
#     "1995",
#     "1994",
#     "1993",
#     "1992",
#     "1991",
#     "1990"
#   ],
#   "special2MM": [
#     "",
#     "01",
#     "02",
#     "03",
#     "04",
#     "05",
#     "06",
#     "07",
#     "08",
#     "09",
#     "10",
#     "11",
#     "12"
#   ],
#   "special2Opt2": "000",
#   "special3Yn": [
#     "0",
#     "1"
#   ],
#   "cChildGb": [
#     "c",
#     "t"
#   ],
#   "special3Opt": "00000000",
#   "special3YYYY": [
#     "",
#     "2019",
#     "2018",
#     "2017",
#     "2016",
#     "2015",
#     "2014",
#     "2013",
#     "2012",
#     "2011",
#     "2010",
#     "2009"
#   ],
#   "special3MM": [
#     "",
#     "01",
#     "02",
#     "03",
#     "04",
#     "05",
#     "06",
#     "07",
#     "08",
#     "09",
#     "10",
#     "11",
#     "12"
#   ],
#   "special3DD": [
#     "",
#     "01",
#     "02",
#     "03",
#     "04",
#     "05",
#     "06",
#     "07",
#     "08",
#     "09",
#     "10",
#     "11",
#     "12",
#     "13",
#     "14",
#     "15",
#     "16",
#     "17",
#     "18",
#     "19",
#     "20",
#     "21",
#     "22",
#     "23",
#     "24",
#     "25",
#     "26",
#     "27",
#     "28",
#     "29",
#     "30",
#     "31"
#   ],
#   "special4Yn": [
#     "0",
#     "1"
#   ],
#   "special5Yn": [
#     "0",
#     "1"
#   ],
#   "special5Opt": "000",
#   "special5Opt3": [
#     "006",
#     "012"
#   ],
#   "special5Opt2": [
#     "012",
#     "024"
#   ],
#   "special6Yn": [
#     "0",
#     "1"
#   ],
#   "special6Opt": "000",
#   "special7Yn": [
#     "0",
#     "1"
#   ],
#   "limitSpecial7Opt1": "12000",
#   "special7Opt1": "00000",
#   "special7Opt2": "00000",
#   "special8Yn": [
#     "0",
#     "1"
#   ],
#   "special9Yn": [
#     "0",
#     "1"
#   ]
# }




### 위 제출에 대하여 
# 각 필드의 이름에 GET 요청을 하면 가능한 옵션 리스트를 얻을 수 있도록 할 예정

# GET {{URL}}/options?key={{KEY}}&field=psn2Yn HTTP/1.1



### 보험 옵션 제출
# 예제는 기본값

POST {{URL}}/options?key={{KEY}} HTTP/1.1
Content-Type: application/json

{
  "psn2Yn": "1",
  "tng1Amt": "20000",
  "driverDthAmt": "3000",
  "driverInjAmt": "1500",
  "driverInjGubun": "1",
  "noInsYn": "1",
  "mycarYn": "1",
  "emgServiceYn": "1",
  "tngBaseAmt": "200",
  "driverScope": "3",
  "minBrith": "19901125",
  "special1Yn": "0",
  "special1Opt": "00000",
  "special2Yn": "0",
  "special2Opt1": "000000",
  "special2Opt3": "000",
  "special3Yn": "0",
  "cChildGb": "c",
  "special3Opt": "00000000",
  "special4Yn": "0",
  "special5Yn": "0",
  "special5Opt": "000",
  "special6Yn": "0",
  "special6Opt": "000",
  "special7Yn": "0",
  "limitSpecial7Opt1": "12000",
  "special7Opt1": "00000",
  "special7Opt2": "00000",
  "special8Yn": "0",
  "special9Yn": "0"
}


# HTTP/1.1 200 OK
# Content-Type: application/json; charset=utf-8
# Content-Length: 1876
# Date: Fri, 04 Oct 2019 05:50:30 GMT
# Server: Python/3.7 aiohttp/3.6.1
# Connection: close

# [
#   {
#     "insu_company_name": "MG손해보험",
#     "insu_total_cost": "1,183,740",
#     "insu_link": "http://direct.mggeneralins.com/?agCd=A0010001&pdCd=41401&utm_source=damoa&utm_medium=cpc&utm_campaign=carins"
#   },
#   {
#     "insu_company_name": "롯데손해보험",
#     "insu_total_cost": "1,282,070",
#     "insu_link": "http://www.lottehowmuch.com/index2.jsp?IF=AFCOC000047002&PB=002"
#   },
#   {
#     "insu_company_name": "KB손해보험",
#     "insu_total_cost": "1,355,060",
#     "insu_link": "http://direct.kbinsure.co.kr/websquare/promotion.jsp?pid=1090036&code=0009&page=step1 "
#   },
#   {
#     "insu_company_name": "메리츠화재해상보험",
#     "insu_total_cost": "1,361,980",
#     "insu_link": "https://www.meritzdirect.com/DAP1601NT000013/southeaster.do"
#   },
#   {
#     "insu_company_name": "현대해상화재보험",
#     "insu_total_cost": "1,401,140",
#     "insu_link": "https://direct.hi.co.kr/service.do?src=image&kw=0171AA&m=28680681ee&inpath=e_sure_market"
#   },
#   {
#     "insu_company_name": "한화손해보험",
#     "insu_total_cost": "1,433,900",
#     "insu_link": "http://www.hanwhadirect.com/landing.do?cmpgId=1000000020 "
#   },
#   {
#     "insu_company_name": "더케이손해보험",
#     "insu_total_cost": "1,440,340",
#     "insu_link": "https://www.educar.co.kr/st/ins.html"
#   },
#   {
#     "insu_company_name": "AXA손해보험",
#     "insu_total_cost": "1,484,290",
#     "insu_link": "https://www.axa.co.kr/index_email_relay.jsp?sm_flag=N&site_acq_src=0204501&cmpid=da_insmarket_dis_sb_insmarket-damoa&relay_lang_type=ko&utm_source=insmarket&utm_medium=display&utm_campaign=insmarket-damoa&go_url=/ActionControler.action?screenID=SHAI0000&actionID=I01"
#   },
#   {
#     "insu_company_name": "삼성화재해상보험",
#     "insu_total_cost": "1,512,360",
#     "insu_link": "http://direct.samsungfire.com/CR_MyAnycarWeb/overture_index.jsp?OTK=A1511OB0050"
#   },
#   {
#     "insu_company_name": "동부화재",
#     "insu_total_cost": "1,514,550",
#     "insu_link": "https://www.directdongbu.com/product/at/pvuatarc/step1/formStepPre.do?partner_code=C049"
#   }
# ]